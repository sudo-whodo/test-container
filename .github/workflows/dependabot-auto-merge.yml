name: Dependabot Auto-Merge

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]
  pull_request_target:
    types: [opened, synchronize, reopened, labeled]

jobs:
  dependabot-auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    permissions:
      contents: write
      pull-requests: write
      checks: read

    steps:
    - name: Generate GitHub App Token
      id: app-token
      uses: actions/create-github-app-token@v2
      with:
        app-id: ${{ secrets.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ steps.app-token.outputs.token }}

    - name: Analyze Dependabot PR
      id: analyze
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        PR_TITLE: ${{ github.event.pull_request.title }}
        PR_LABELS: ${{ toJson(github.event.pull_request.labels.*.name) }}
      run: |
        # Get PR details safely from environment variables
        echo "PR Title: $PR_TITLE"
        echo "PR Labels: $PR_LABELS"

        # Initialize approval criteria
        AUTO_APPROVE=false
        AUTO_MERGE=false
        MERGE_METHOD="squash"
        REASON=""

        # Check if this is a dependency update
        if [[ "$PR_LABELS" == *"dependencies"* ]]; then
          echo "✅ Dependency update detected"

          # Analyze update type and severity based on title
          if [[ "$PR_TITLE" =~ ^(pip|pip-tests|docker|actions): ]]; then
            echo "✅ Valid dependency prefix found"

            # Check for version bump pattern
            if [[ "$PR_TITLE" =~ bump.*from.*[0-9]+\.[0-9]+\.[0-9]+.*to.*[0-9]+\.[0-9]+\.[0-9]+ ]]; then
              echo "✅ Standard version bump detected"

              # For simplicity, auto-approve all standard version bumps
              # Major versions will be auto-approved but not auto-merged
              if [[ "$PR_TITLE" =~ from.*[0-9]+\.[0-9]+\.[0-9]+.*to.*[0-9]+\.[0-9]+\.[0-9]+ ]]; then
                AUTO_APPROVE=true
                AUTO_MERGE=true
                REASON="Standard version update - safe to auto-merge"
              fi
            else
              echo "ℹ️ Non-standard version format"
              AUTO_APPROVE=true
              AUTO_MERGE=false
              REASON="Non-standard version format - requires manual review"
            fi

            # Special handling for test dependencies (more permissive)
            if [[ "$PR_LABELS" == *"tests"* ]]; then
              echo "🧪 Test dependency update"
              AUTO_APPROVE=true
              AUTO_MERGE=true
              REASON="Test dependency - safe to auto-merge"
            fi

            # Special handling for GitHub Actions (generally safe to auto-merge)
            if [[ "$PR_LABELS" == *"github-actions"* ]] || [[ "$PR_LABELS" == *"ci"* ]]; then
              echo "⚙️ GitHub Actions update detected"
              AUTO_APPROVE=true
              AUTO_MERGE=true
              REASON="GitHub Actions update - safe to auto-merge"
            fi
          fi
        fi

        echo "auto_approve=${AUTO_APPROVE}" >> $GITHUB_OUTPUT
        echo "auto_merge=${AUTO_MERGE}" >> $GITHUB_OUTPUT
        echo "merge_method=${MERGE_METHOD}" >> $GITHUB_OUTPUT
        echo "reason=${REASON}" >> $GITHUB_OUTPUT

        echo ""
        echo "📊 Dependabot Analysis Results:"
        echo "  Auto Approve: ${AUTO_APPROVE}"
        echo "  Auto Merge: ${AUTO_MERGE}"
        echo "  Merge Method: ${MERGE_METHOD}"
        echo "  Reason: ${REASON}"

    - name: Wait for CI checks
      id: wait-for-ci-checks
      if: steps.analyze.outputs.auto_approve == 'true'
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
      run: |
        echo "⏳ Waiting for CI checks to complete..."

        # Wait for checks to complete (max 10 minutes)
        TIMEOUT=600
        ELAPSED=0
        INTERVAL=30

        while [ $ELAPSED -lt $TIMEOUT ]; do
          # Get check runs for this commit
          CHECKS=$(gh api repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/check-runs --jq '.check_runs[] | select(.name != "dependabot-auto-merge") | .status')

          # Count pending checks
          PENDING_CHECKS=$(echo "$CHECKS" | grep -c "in_progress\|queued" || echo "0")
          FAILED_CHECKS=$(echo "$CHECKS" | grep -c "failure" || echo "0")

          echo "Pending checks: $PENDING_CHECKS, Failed checks: $FAILED_CHECKS"

          if [ "$PENDING_CHECKS" -eq 0 ]; then
            if [ "$FAILED_CHECKS" -eq 0 ]; then
              echo "✅ All checks passed!"
              echo "checks_passed=true" >> $GITHUB_OUTPUT
              break
            else
              echo "❌ Some checks failed"
              echo "checks_passed=false" >> $GITHUB_OUTPUT
              break
            fi
          fi

          echo "Waiting ${INTERVAL}s for checks to complete..."
          sleep $INTERVAL
          ELAPSED=$((ELAPSED + INTERVAL))
        done

        if [ $ELAPSED -ge $TIMEOUT ]; then
          echo "⏰ Timeout waiting for checks"
          echo "checks_passed=false" >> $GITHUB_OUTPUT
        fi

    - name: Approve PR
      if: steps.analyze.outputs.auto_approve == 'true'
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
      run: |
        echo "👍 Auto-approving Dependabot PR..."

        gh pr review ${{ github.event.pull_request.number }} \
          --approve \
          --body "🤖 **Auto-approved by GitHub App**

        **Reason:** ${{ steps.analyze.outputs.reason }}

        **Analysis:**
        - ✅ Dependabot PR detected
        - ✅ Dependency update verified
        - ✅ Auto-approval criteria met

        This PR has been automatically approved based on the dependency update type and repository policies."

    - name: Add auto-merge label
      if: steps.analyze.outputs.auto_merge == 'true' && steps.wait-for-ci-checks.outputs.checks_passed == 'true'
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
      run: |
        echo "🏷️ Adding auto-merge label..."
        gh pr edit ${{ github.event.pull_request.number }} --add-label "auto-merge"

    - name: Merge PR
      if: steps.analyze.outputs.auto_merge == 'true' && steps.wait-for-ci-checks.outputs.checks_passed == 'true'
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
      run: |
        echo "🚀 Auto-merging Dependabot PR..."

        # Add a comment before merging
        gh pr comment ${{ github.event.pull_request.number }} \
          --body "🤖 **Auto-merging this PR**

        **Reason:** ${{ steps.analyze.outputs.reason }}

        **Checks:**
        - ✅ All CI checks passed
        - ✅ Auto-merge criteria met
        - ✅ Safe dependency update detected

        Merging now..."

        # Merge the PR
        gh pr merge ${{ github.event.pull_request.number }} \
          --${{ steps.analyze.outputs.merge_method }} \
          --delete-branch

    - name: Comment on manual review needed
      if: steps.analyze.outputs.auto_approve == 'true' && steps.analyze.outputs.auto_merge == 'false'
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
      run: |
        echo "💬 Adding manual review comment..."

        gh pr comment ${{ github.event.pull_request.number }} \
          --body "🤖 **Auto-approved with manual merge required**

        **Reason:** ${{ steps.analyze.outputs.reason }}

        **Next Steps:**
        - ✅ This PR has been automatically approved
        - ⏳ Manual review and merge required
        - 🔍 Please review the changes before merging

        This dependency update requires manual attention due to its nature or scope."

    - name: Comment on checks failed
      if: steps.analyze.outputs.auto_approve == 'true' && steps.wait-for-ci-checks.outputs.checks_passed == 'false'
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
      run: |
        echo "💬 Adding checks failed comment..."

        gh pr comment ${{ github.event.pull_request.number }} \
          --body "🤖 **Auto-approval completed, but merge blocked**

        **Status:** CI checks failed or timed out

        **Next Steps:**
        - ✅ This PR has been automatically approved
        - ❌ CI checks failed - merge blocked
        - 🔧 Please review and fix any failing tests

        The PR will need manual attention to resolve the failing checks."
